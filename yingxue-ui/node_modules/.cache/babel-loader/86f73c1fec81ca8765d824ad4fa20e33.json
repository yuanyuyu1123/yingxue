{"remainingRequest":"E:\\javafile\\yingxue-admin\\yingxue-ui\\node_modules\\babel-loader\\lib\\index.js!E:\\javafile\\yingxue-admin\\yingxue-ui\\src\\store\\home\\index.js","dependencies":[{"path":"E:\\javafile\\yingxue-admin\\yingxue-ui\\src\\store\\home\\index.js","mtime":1652150310000},{"path":"E:\\javafile\\yingxue-admin\\yingxue-ui\\babel.config.js","mtime":1652150310000},{"path":"E:\\javafile\\yingxue-admin\\yingxue-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1659166634376},{"path":"E:\\javafile\\yingxue-admin\\yingxue-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":1659166658972}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkU6XFxqYXZhZmlsZVxceWluZ3h1ZS1hZG1pblxceWluZ3h1ZS11aVxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWVcXGhlbHBlcnNcXGVzbVxcYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IHsgcmVxQmFubmVyTGlzdCwgcmVxQ2F0ZWdvcnlMaXN0LCByZXFGbG9vckxpc3QgfSBmcm9tICJAL2FwaSI7IC8vaG9tZeaooeWdl+Wwj+S7k+W6kwoKdmFyIHN0YXRlID0gewogIC8vc3RhdGVj5Yid5aeL5YC85LiN6IO9556O5YaZ77yM5pyN5Yqh5Zmo6L+U5Zue55qE5piv5pWw57uE5bCx5piv5pWw5o2u77yM5qC55o2u5o6l5Y+j6L+U5Zue5YC85Yid5aeL5YyWCiAgY2F0ZWdvcnlMaXN0OiBbXSwKICBiYW5uZXJMaXN0OiBbXSwKICBmbG9vckxpc3Q6IFtdLAogIG51bWJlcjE6IDEsCiAgbnVtYmVyMjogMgp9Owp2YXIgbXV0YXRpb25zID0gewogIENBVEVHT1JZTElTVDogZnVuY3Rpb24gQ0FURUdPUllMSVNUKHN0YXRlLCBjYXRlZ29yeUxpc3QpIHsKICAgIHN0YXRlLmNhdGVnb3J5TGlzdCA9IGNhdGVnb3J5TGlzdDsKICB9LAogIEdFVEJBTk5FUkxJU1Q6IGZ1bmN0aW9uIEdFVEJBTk5FUkxJU1Qoc3RhdGUsIGJhbm5lckxpc3QpIHsKICAgIHN0YXRlLmJhbm5lckxpc3QgPSBiYW5uZXJMaXN0OwogIH0sCiAgR0VURkxPT1JMSVNUOiBmdW5jdGlvbiBHRVRGTE9PUkxJU1Qoc3RhdGUsIGZsb29yTGlzdCkgewogICAgc3RhdGUuZmxvb3JMaXN0ID0gZmxvb3JMaXN0OwogIH0sCiAgY2hhbmdlTnVtYmVyMTogZnVuY3Rpb24gY2hhbmdlTnVtYmVyMShzdGF0ZSwgdmFsKSB7CiAgICBzdGF0ZS5udW1iZXIxICs9IHZhbDsKICB9LAogIGNoYW5nZU51bWJlcjI6IGZ1bmN0aW9uIGNoYW5nZU51bWJlcjIoc3RhdGUsIHZhbCkgewogICAgc3RhdGUubnVtYmVyMiArPSB2YWw7CiAgfQp9Owp2YXIgYWN0aW9ucyA9IHsKICAvL+mAmui/h2FwaemHjOmdoueahOaOpeWPo+WHveaVsOiwg+eUqO+8jOWQkeacjeWKoeWZqOWPkeivt+axgu+8jOiOt+WPluacjeWKoeWZqOaVsOaNrgogIGNhdGVnb3J5TGlzdDogZnVuY3Rpb24gY2F0ZWdvcnlMaXN0KF9yZWYpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHZhciBjb21taXQsIHJlc3VsdDsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiByZXFDYXRlZ29yeUxpc3QoKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICByZXN1bHQgPSBfY29udGV4dC5zZW50OwoKICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZygnSEVIRUhIRUhFRUVFRUVFRUVFRUUnKTsKICAgICAgICAgICAgICBpZiAocmVzdWx0LmNvZGUgPT0gMjAwKSB7CiAgICAgICAgICAgICAgICBjb21taXQoIkNBVEVHT1JZTElTVCIsIHJlc3VsdC5kYXRhKTsgLy8gIHRocm93IG5ldyBFcnJvcign6ZSZ6K+vJykKICAgICAgICAgICAgICB9CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfSwKICAvL+iOt+WPlummlumhtei9ruaSreWbvuaVsOaNrgogIGdldEJhbm5lckxpc3Q6IGZ1bmN0aW9uIGdldEJhbm5lckxpc3QoX3JlZjIpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICB2YXIgY29tbWl0LCByZXN1bHQ7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjIuY29tbWl0OwogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gcmVxQmFubmVyTGlzdCgpOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIHJlc3VsdCA9IF9jb250ZXh0Mi5zZW50OwoKICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhyZXN1bHQuZGF0YSkKICAgICAgICAgICAgICBpZiAocmVzdWx0LmNvZGUgPT0gMjAwKSB7CiAgICAgICAgICAgICAgICBjb21taXQoIkdFVEJBTk5FUkxJU1QiLCByZXN1bHQuZGF0YSk7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTIpOwogICAgfSkpKCk7CiAgfSwKICAvL+iOt+WPlmZsb29y5pWw5o2uCiAgZ2V0Rmxvb3JMaXN0OiBmdW5jdGlvbiBnZXRGbG9vckxpc3QoX3JlZjMpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICB2YXIgY29tbWl0LCByZXN1bHQ7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjMuY29tbWl0OwogICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gcmVxRmxvb3JMaXN0KCk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcmVzdWx0ID0gX2NvbnRleHQzLnNlbnQ7CgogICAgICAgICAgICAgIGlmIChyZXN1bHQuY29kZSA9PSAyMDApIHsKICAgICAgICAgICAgICAgIGNvbW1pdCgiR0VURkxPT1JMSVNUIiwgcmVzdWx0LmRhdGEpOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUzKTsKICAgIH0pKSgpOwogIH0sCiAgY2hhbmdlTnVtYmVyMUFjdGlvbjogZnVuY3Rpb24gY2hhbmdlTnVtYmVyMUFjdGlvbihjb250ZXh0LCB2YWwpIHsKICAgIGNvbnRleHQuY29tbWl0KCdjaGFuZ2VOdW1iZXIxJywgdmFsKTsKICB9LAogIGNoYW5nZU51bWJlcjJBY3Rpb246IGZ1bmN0aW9uIGNoYW5nZU51bWJlcjJBY3Rpb24oY29udGV4dCwgdmFsKSB7CiAgICBjb250ZXh0LmNvbW1pdCgnY2hhbmdlTnVtYmVyMicsIHZhbCk7CiAgfQp9Owp2YXIgZ2V0dGVycyA9IHsKICB0b3RhbDogZnVuY3Rpb24gdG90YWwoc3RhdGUpIHsKICAgIGNvbnNvbGUubG9nKHN0YXRlLm51bWJlcjEgKyBzdGF0ZS5udW1iZXIyKTsKICAgIHJldHVybiBzdGF0ZS5udW1iZXIxICsgc3RhdGUubnVtYmVyMjsKICB9Cn07CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lc3BhY2VkOiB0cnVlLAogIHN0YXRlOiBzdGF0ZSwKICBtdXRhdGlvbnM6IG11dGF0aW9ucywKICBhY3Rpb25zOiBhY3Rpb25zLAogIGdldHRlcnM6IGdldHRlcnMKfTs="},{"version":3,"sources":["E:/javafile/yingxue-admin/yingxue-ui/src/store/home/index.js"],"names":["reqBannerList","reqCategoryList","reqFloorList","state","categoryList","bannerList","floorList","number1","number2","mutations","CATEGORYLIST","GETBANNERLIST","GETFLOORLIST","changeNumber1","val","changeNumber2","actions","commit","result","code","data","getBannerList","getFloorList","changeNumber1Action","context","changeNumber2Action","getters","total","console","log","namespaced"],"mappings":"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","sourcesContent":["import { reqBannerList, reqCategoryList,reqFloorList } from \"@/api\";\n//home模块小仓库\nconst state = {\n  //statec初始值不能瞎写，服务器返回的是数组就是数据，根据接口返回值初始化\n  categoryList: [],\n  bannerList: [],\n  floorList: [],\n  number1:1,\n\tnumber2:2\n};\nconst mutations = {\n  CATEGORYLIST(state, categoryList) {\n    state.categoryList = categoryList;\n  },\n  GETBANNERLIST(state, bannerList) {\n    state.bannerList = bannerList;\n  },\n  GETFLOORLIST(state, floorList) {\n    state.floorList = floorList;\n  },\n  changeNumber1(state, val){\n    state.number1 += val\n  },\n  changeNumber2(state, val){\n      state.number2 += val\n  },\n};\nconst actions = {\n  //通过api里面的接口函数调用，向服务器发请求，获取服务器数据\n  async categoryList({ commit }) {\n    let result = await reqCategoryList();\n    // console.log('HEHEHHEHEEEEEEEEEEEE');\n    if (result.code == 200) {\n      commit(\"CATEGORYLIST\", result.data);\n      //  throw new Error('错误')\n    } \n  },\n  //获取首页轮播图数据\n  async getBannerList({ commit }) {\n    let result = await reqBannerList();\n    // console.log(result.data)\n    if (result.code == 200) {\n      commit(\"GETBANNERLIST\", result.data);\n    }\n  },\n  //获取floor数据\n  async getFloorList({ commit }) {\n    let result = await reqFloorList();\n    if (result.code == 200) {\n      commit(\"GETFLOORLIST\", result.data);\n    }\n  },\n  changeNumber1Action(context,val){\n    context.commit('changeNumber1',val);\n  },\n  changeNumber2Action(context,val){\n      context.commit('changeNumber2',val);\n  }\n};\nconst getters = {\n  total(state){\n    console.log(state.number1+state.number2)\n    return state.number1+state.number2\n  }\n};\n\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions,\n  getters,\n};\n"]}]}