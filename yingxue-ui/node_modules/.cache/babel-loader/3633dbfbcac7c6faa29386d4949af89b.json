{"remainingRequest":"E:\\javafile\\yingxue-admin\\yingxue-ui\\node_modules\\babel-loader\\lib\\index.js!E:\\javafile\\yingxue-admin\\yingxue-ui\\src\\store\\user\\index.js","dependencies":[{"path":"E:\\javafile\\yingxue-admin\\yingxue-ui\\src\\store\\user\\index.js","mtime":1652150310000},{"path":"E:\\javafile\\yingxue-admin\\yingxue-ui\\babel.config.js","mtime":1652150310000},{"path":"E:\\javafile\\yingxue-admin\\yingxue-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1659166634376},{"path":"E:\\javafile\\yingxue-admin\\yingxue-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":1659166658972}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["E:/javafile/yingxue-admin/yingxue-ui/src/store/user/index.js"],"names":["reqGetCode","reqUserRregister","reqUserLogin","reqUserInfo","reqLogout","setToken","getToken","removeToken","state","code","token","userInfo","mutations","GETCODE","USERLOGIN","GETUSERINFO","CLEAR","actions","getCode","phone","commit","result","data","Promise","reject","Error","userRregister","user","userLogin","getUserInfo","userLogout","console","log","getters"],"mappings":"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","sourcesContent":["import {reqGetCode,reqUserRregister,reqUserLogin,reqUserInfo,reqLogout} from '@/api'\nimport {setToken,getToken,removeToken} from '@/utils/token'\n// 登录注册\nconst state={\n    code:'',\n    token:getToken(),\n    userInfo:{}\n};\nconst mutations={\n    GETCODE(state,code){\n          state.code=code;\n    },\n    USERLOGIN(state,token){\n        state.token=token\n    },\n    GETUSERINFO(state,userInfo){\n        state.userInfo=userInfo\n    },\n    //清除本地数据\n    CLEAR(state){\n        state.token='';\n        state.userInfo={};\n        removeToken();\n    }\n};\nconst actions={\n    //获取验证码\n    async getCode({commit},phone){\n        //把验证码返回，但是正常是后台发手机上\n        let result =await reqGetCode(phone);\n        if(result.code==200){\n            commit('GETCODE',result.data);\n        }else {\n            return Promise.reject(new Error('fail'));\n        }\n    },\n    // 用户注册\n    async userRregister({commit},user){\n        let result =await reqUserRregister(user);\n\n        if(result.code==200){\n            return 'ok';\n        }else {\n            return Promise.reject(new Error('fail'));\n        }\n    },\n    //用户登录业务【token】\n    async userLogin({commit},user){\n        let result =await reqUserLogin(user);\n        //token--用户的唯一标识。。将来经常用token找服务器拿用户信息进行展示\n        if(result.code==200){\n            //登录成功获取到token,要持久化token\n            setToken(result.data.token)\n            commit('USERLOGIN',result.data.token)\n            return 'ok';\n        }else {\n            return Promise.reject(new Error('fail'));\n        }\n    \n    },\n    //获取用户信息 \n    async getUserInfo({commit}){\n        let result = await reqUserInfo(); \n        // console.log('getUserInfo',result)\n        if(result.code==200){\n            commit('GETUSERINFO',result.data)\n            return 'ok';\n        }else {\n            return Promise.reject(new Error('fail'));\n        }\n    },\n    //退出请求\n    async userLogout({commit}){\n        //只是向服务器发请求，通知服务器清除token\n        let result = await reqLogout();\n        console.log(result)\n        if(result.code==200){\n            //actions中不能修改state,只能mutations中修改\n            commit('CLEAR');\n            return 'ok';\n        }else {\n            return Promise.reject(new Error('fail'));\n        }\n    \n    }\n};\nconst getters={};\nexport default {\n    state,mutations,actions,getters\n}"]}]}